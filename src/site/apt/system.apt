~~
~~   Copyright 2009-2010 The Rocoto Team
~~
~~   Licensed under the Apache License, Version 2.0 (the "License");
~~   you may not use this file except in compliance with the License.
~~   You may obtain a copy of the License at
~~
~~       http://www.apache.org/licenses/LICENSE-2.0
~~
~~   Unless required by applicable law or agreed to in writing, software
~~   distributed under the License is distributed on an "AS IS" BASIS,
~~   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~~   See the License for the specific language governing permissions and
~~   limitations under the License.
~~

~~author: Simone Tripodi
~~version: $Id: simple-configuration.apt 71 2010-01-02 16:28:21Z simone.tripodi $
                                    ------
                                    Home
                                    ------
                                    System
                                    ------
                                     2010

The System module

  The <System> module is a light and alternative way to bind and inject Java
  System Properties and Environment Variables.

  Users that want ot use the <System> module in their ptojects,
  users have to add in their <<<pom.xml>>> the following <<<dependency>>>:

----------------------------------------
<dependencies>
    ...
    <dependency>
        <groupId>com.rocoto</groupId>
        <artifactId>rocoto-system</artifactId>
        <version>XX.XX</version>
    </dependency>
    ...
</dependencies>
----------------------------------------

* Binding Java System Properties

  Binding Java System Properties is quick and easy; first of all annotate your
  POJO fields/method:

----------------------------------------
import com.rocoto.system.SystemProperty;

public class MyPojo {

    @Inject
    @SystemProperty("user.home")
    private String userHome;

    @Inject
    public void setUserLanguage(@SystemProperty("user.language") String userLanguage) {
        ...
    }

}
----------------------------------------

  then run the injector!

----------------------------------------
import com.google.inject.Guice;
import com.google.inject.Inject;

import com.rocoto.system.SystemPropertiesModule;
...
Injector injector = Guice.createInjector(new SystemPropertiesModule());
----------------------------------------

* Binding Environment Variables

  Like Java System Properties, binding Environment Variables is quick and easy;
  first of all annotate your POJO fields/method:

----------------------------------------
import com.rocoto.system.EnvironmentVariable;

public class MyPojo {

    @Inject
    @EnvironmentVariable("HOME")
    private String userHome;

    @Inject
    public void setUserLanguage(@EnvironmentVariable("CATALINA_HOME") String catalinaHome) {
        ...
    }

}
----------------------------------------

  then run the injector!

----------------------------------------
import com.google.inject.Guice;
import com.google.inject.Inject;

import com.rocoto.system.EnvironmentVariablesModule;
...
Injector injector = Guice.createInjector(new EnvironmentVariablesModule());
----------------------------------------
